name: policy check for brgen from GitHub Actions
on: [push]

jobs:
  opa-check:
    name: opa cli
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sisakulint Repository
      uses: actions/checkout@v2
      with:
        repository: ultra-supara/homebrew-sisakulint
        path: sisakulint

    - name: Checkout brgen Repository
      uses: actions/checkout@v2
      with:
        repository: on-keyday/brgen
        path: brgen

    - name: Copy Rego Files
      run: |
        cp sisakulint/script/*.rego brgen/.github/workflows/
        ls -la brgen/.github/workflows/

    - name: Install OPA
      run: |
        curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
        chmod +x opa
        sudo mv opa /usr/local/bin/

    - name: Run OPA Policy Check
      run: |
        cd brgen/.github/workflows
        for file in *.yml; do
          echo "Checking $file..."
          opa eval --format pretty --data commitsha.rego --input "$file" "data.core.missing_action_ref_sha_warnings" --explain=debug
          echo "---------------------"
          opa eval --format pretty --data credential.rego --input "$file" "data.core.check_credentials" --explain=debug
          echo "---------------------"
          opa eval --format pretty --data imagetag.rego --input "$file" "data.core.missing_image_tag_warnings" --explain=debug
          echo "---------------------"
          opa eval --format pretty --data jobsecrets.rego --input "$file" "data.core.missing_secrets_warnings" --explain=debug
          echo "---------------------"
          opa eval --format pretty --data permission.rego --input "$file" "data.core.missing_permissions_warnings" --explain=debug
          echo "---------------------"
          opa eval --format pretty --data issueinjection.rego --input "$file" "data.core.deny" --explain=debug
          echo "---------------------"
          opa eval --format pretty --data pull_req_title.rego --input "$file" "data.core.deny" --explain=debug
          echo "---------------------"
          opa eval --format pretty --data supply_chain_protection.rego --input "$file" "data.core.generate_error_messages" --explain=debug
          echo "---------------------"
          opa eval --format pretty --data timeout-minutes.rego --input "$file" "data.core.missing_timeout_warnings" --explain=debug
          echo "---------------------"
          opa eval --format pretty --data untrusted_image.rego --input untrusted_image.yaml "data.core.deny" --explain=full
          done
